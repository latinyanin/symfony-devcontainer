{
  "name": "Symfony project",
  "dockerComposeFile": [
    "${localWorkspaceFolder}/.devcontainer/docker-compose.yml",
    "${localWorkspaceFolder}/.devcontainer/symfony/docker-compose.yml"
  ],
  "service": "symfony",
  "workspaceMount": "source=${localWorkspaceFolder},target=/workspaces/,type=bind,consistency=cached",
  "workspaceFolder": "/workspaces/symfony",
  "shutdownAction": "stopCompose",
  "forwardPorts": [
    8000,
    3306,
    "adminer:8080",
    "mailpit:8025",
    "mailpit:1025"
  ],
  "otherPortsAttributes": {
    "onAutoForward": "ignore"
  },
  "postCreateCommand": "ln -sf $(pwd) /code && bash /workspaces/.devcontainer/post-create.sh",
  // "postStartCommand": "bash .devcontainer/post-start.sh",
  "updateContentCommand": {
    "composer install": ["composer", "install"]
    // "importmap:install": ["symfony", "console", "importmap:install"]
  },
  "postAttachCommand": {
    "server": "symfony server:start"
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "xdebug.php-debug",
        "bmewburn.vscode-intelephense-client",
        "neilbrayfield.php-docblocker",
        "mechatroner.rainbow-csv",
        "junstyle.php-cs-fixer",
        "SanderRonde.phpstan-vscode",
        "redhat.vscode-yaml",
        "mblode.twig-language-2",
        "moetelo.twiggy",
        "MrChetan.phpstorm-parameter-hints-in-vscode"
      ],
      "settings": {
        "php.xdebugSettings": {
          "max_data": 65535,
          "show_hidden": 1,
          "max_children": 100,
          "max_depth": 5
        },
        "editor.renderWhitespace": "boundary",
        "editor.rulers": [
          120
        ],
        "editor.tabSize": 2,
        "editor.insertSpaces": true,
        "editor.trimAutoWhitespace": true,
        "files.trimTrailingWhitespace": true,
        "editor.wordWrap": "off",
        "editor.wordWrapColumn": 120,
        "files.associations": {
          "*.inc": "php",
          "*.module": "php",
          "*.install": "php",
          "*.theme": "php",
          "*.profile": "php",
          "*.tpl.php": "php",
          "*.test": "php",
          "*.php": "php",
          "*.info": "ini",
          "*.html": "twig"
        },
        "intelephense.completion.maxItems": 1000,
        "intelephense.environment.phpVersion": "8.3.10",
        "intelephense.files.associations": [
          "*.php",
          "*.phtml",
          "*.inc",
          "*.module",
          "*.install",
          "*.theme",
          "*.tpl.php",
          "*.test"
        ],
        "intelephense.files.maxSize": 10000000,
        "intelephense.format.enable": true,
        "intelephense.phpdoc.returnVoid": false,
        "intelephense.phpdoc.useFullyQualifiedNames": true,
        "php-docblocker.gap": true,
        "php-docblocker.returnGap": true,
        "php-docblocker.useShortNames": true,
        "php-docblocker.qualifyClassNames": true,
        "phpstan.binPath": "vendor/bin/phpstan",
        "[php]": {
          "editor.defaultFormatter": "junstyle.php-cs-fixer"
        },
        "php-cs-fixer.executablePath": "/code/vendor/bin/php-cs-fixer",
        "php-cs-fixer.executablePathWindows": "", //eg: php-cs-fixer.bat
        "php-cs-fixer.onsave": false,
        "php-cs-fixer.rules": "@PSR12",
        "php-cs-fixer.config": ".php-cs-fixer.php;.php-cs-fixer.dist.php;.php_cs;.php_cs.dist",
        "php-cs-fixer.allowRisky": false,
        "php-cs-fixer.pathMode": "override",
        "php-cs-fixer.ignorePHPVersion": false,
        "php-cs-fixer.exclude": [],
        "php-cs-fixer.autoFixByBracket": false,
        "php-cs-fixer.autoFixBySemicolon": false,
        "php-cs-fixer.formatHtml": false,
        "php-cs-fixer.documentFormattingProvider": true
      }
    }
  },
  "features": {
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
      "version": "latest",
      "dockerDashComposeVersion": "v2"
    },
    "ghcr.io/nils-geistmann/devcontainers-features/zsh:0": {
      "theme": "robbyrussell",
      "plugins": "git"
    },
    "ghcr.io/rocker-org/devcontainer-features/apt-packages:1": {
      "packages": "nano,htop"
    },
    "ghcr.io/devcontainers/features/node:1": {
      "version": "lts",
      "installYarnUsingApt": true,
      "nvmInstallPath": "/usr/local/share/nvm"
    }
  }
}
